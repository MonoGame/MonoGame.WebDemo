Bridge.assembly("Platformer2D",function($asm,globals){"use strict";var $m=Bridge.setMetadata,$n=["System","Microsoft.Xna.Framework","Microsoft.Xna.Framework.Graphics","Platformer2D","Microsoft.Xna.Framework.Input","Microsoft.Xna.Framework.Input.Touch","System.Collections.Generic","Microsoft.Xna.Framework.Content","System.Threading.Tasks","Microsoft.Xna.Framework.Media","Microsoft.Xna.Framework.Audio"];$m("Platformer2D.App",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Main",is:!0,t:8,sn:"Main",rt:$n[0].Void},{a:1,n:"game",is:!0,t:4,rt:$n[1].Game,sn:"game"}]}},$n);$m("Platformer2D.PlatformerGame",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:3,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"Draw",rt:$n[0].Void,p:[$n[1].GameTime]},{a:1,n:"DrawHud",t:8,sn:"DrawHud",rt:$n[0].Void},{a:1,n:"DrawShadowedString",t:8,pi:[{n:"font",pt:$n[2].SpriteFont,ps:0},{n:"value",pt:$n[0].String,ps:1},{n:"position",pt:$n[1].Vector2,ps:2},{n:"color",pt:$n[1].Color,ps:3}],sn:"DrawShadowedString",rt:$n[0].Void,p:[$n[2].SpriteFont,$n[0].String,$n[1].Vector2,$n[1].Color]},{a:1,n:"HandleInput",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"HandleInput",rt:$n[0].Void,p:[$n[1].GameTime]},{ov:!0,a:3,n:"LoadContent",t:8,sn:"LoadContent",rt:$n[0].Void},{a:1,n:"LoadNextLevel",t:8,sn:"LoadNextLevel",rt:$n[0].Void},{a:1,n:"LoadStuff",t:8,sn:"LoadStuff",rt:$n[0].Void},{a:1,n:"ReloadCurrentLevel",t:8,sn:"ReloadCurrentLevel",rt:$n[0].Void},{ov:!0,a:3,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[1].GameTime]},{a:1,n:"WarningTime",is:!0,t:4,rt:$n[0].TimeSpan,sn:"WarningTime",ro:!0},{a:1,n:"accelerometerState",t:4,rt:$n[3].AccelerometerState,sn:"accelerometerState"},{a:1,n:"baseScreenSize",t:4,rt:$n[1].Vector2,sn:"baseScreenSize"},{a:1,n:"clicked",t:4,rt:$n[0].Boolean,sn:"clicked",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"gamePadState",t:4,rt:$n[4].GamePadState,sn:"gamePadState"},{a:1,n:"globalTransformation",t:4,rt:$n[1].Matrix,sn:"globalTransformation"},{a:1,n:"graphics",t:4,rt:$n[1].GraphicsDeviceManager,sn:"graphics"},{a:1,n:"keyboardState",t:4,rt:$n[4].KeyboardState,sn:"keyboardState"},{a:1,n:"level",t:4,rt:$n[3].Level,sn:"level"},{a:1,n:"levelIndex",t:4,rt:$n[0].Int32,sn:"levelIndex",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"numberOfLevels",is:!0,t:4,rt:$n[0].Int32,sn:"numberOfLevels",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"spriteBatch",t:4,rt:$n[2].SpriteBatch,sn:"spriteBatch"},{a:1,n:"touchState",t:4,rt:$n[5].TouchCollection,sn:"touchState"},{a:1,n:"virtualGamePad",t:4,rt:$n[3].VirtualGamePad,sn:"virtualGamePad"},{a:1,n:"wasContinuePressed",t:4,rt:$n[0].Boolean,sn:"wasContinuePressed",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Platformer2D.Accelerometer",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"GetState",is:!0,t:8,sn:"GetState",rt:$n[3].AccelerometerState},{a:2,n:"Initialize",is:!0,t:8,sn:"Initialize",rt:$n[0].Void},{a:1,n:"isActive",is:!0,t:4,rt:$n[0].Boolean,sn:"isActive",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"isInitialized",is:!0,t:4,rt:$n[0].Boolean,sn:"isInitialized",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Platformer2D.AccelerometerState",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Vector3,$n[0].Boolean],pi:[{n:"acceleration",pt:$n[1].Vector3,ps:0},{n:"isActive",pt:$n[0].Boolean,ps:1}],sn:"$ctor1"},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[0].String},{a:2,n:"Acceleration",t:16,rt:$n[1].Vector3,g:{a:2,n:"get_Acceleration",t:8,rt:$n[1].Vector3,fg:"Acceleration"},s:{a:1,n:"set_Acceleration",t:8,p:[$n[1].Vector3],rt:$n[0].Void,fs:"Acceleration"},fn:"Acceleration"},{a:2,n:"IsActive",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsActive",t:8,rt:$n[0].Boolean,fg:"IsActive",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:1,n:"set_IsActive",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsActive"},fn:"IsActive"}]}},$n);$m("Platformer2D.Animation",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[2].Texture2D,$n[0].Single,$n[0].Boolean],pi:[{n:"texture",pt:$n[2].Texture2D,ps:0},{n:"frameTime",pt:$n[0].Single,ps:1},{n:"isLooping",pt:$n[0].Boolean,ps:2}],sn:"ctor"},{a:2,n:"FrameCount",t:16,rt:$n[0].Int32,g:{a:2,n:"get_FrameCount",t:8,rt:$n[0].Int32,fg:"FrameCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FrameCount"},{a:2,n:"FrameHeight",t:16,rt:$n[0].Int32,g:{a:2,n:"get_FrameHeight",t:8,rt:$n[0].Int32,fg:"FrameHeight",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FrameHeight"},{a:2,n:"FrameTime",t:16,rt:$n[0].Single,g:{a:2,n:"get_FrameTime",t:8,rt:$n[0].Single,fg:"FrameTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"FrameTime"},{a:2,n:"FrameWidth",t:16,rt:$n[0].Int32,g:{a:2,n:"get_FrameWidth",t:8,rt:$n[0].Int32,fg:"FrameWidth",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FrameWidth"},{a:2,n:"IsLooping",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsLooping",t:8,rt:$n[0].Boolean,fg:"IsLooping",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsLooping"},{a:2,n:"Texture",t:16,rt:$n[2].Texture2D,g:{a:2,n:"get_Texture",t:8,rt:$n[2].Texture2D,fg:"Texture"},fn:"Texture"},{a:1,n:"frameTime",t:4,rt:$n[0].Single,sn:"frameTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"isLooping",t:4,rt:$n[0].Boolean,sn:"isLooping",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"texture",t:4,rt:$n[2].Texture2D,sn:"texture"}]}},$n);$m("Platformer2D.AnimationPlayer",function(){return{att:1048840,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0},{n:"spriteBatch",pt:$n[2].SpriteBatch,ps:1},{n:"position",pt:$n[1].Vector2,ps:2},{n:"spriteEffects",pt:$n[2].SpriteEffects,ps:3}],sn:"Draw",rt:$n[0].Void,p:[$n[1].GameTime,$n[2].SpriteBatch,$n[1].Vector2,$n[2].SpriteEffects]},{a:2,n:"PlayAnimation",t:8,pi:[{n:"animation",pt:$n[3].Animation,ps:0}],sn:"PlayAnimation",rt:$n[0].Void,p:[$n[3].Animation]},{a:2,n:"Animation",t:16,rt:$n[3].Animation,g:{a:2,n:"get_Animation",t:8,rt:$n[3].Animation,fg:"Animation"},fn:"Animation"},{a:2,n:"FrameIndex",t:16,rt:$n[0].Int32,g:{a:2,n:"get_FrameIndex",t:8,rt:$n[0].Int32,fg:"FrameIndex",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FrameIndex"},{a:2,n:"Origin",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Origin",t:8,rt:$n[1].Vector2,fg:"Origin"},fn:"Origin"},{a:1,n:"animation",t:4,rt:$n[3].Animation,sn:"animation"},{a:1,n:"frameIndex",t:4,rt:$n[0].Int32,sn:"frameIndex",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"time",t:4,rt:$n[0].Single,sn:"time",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("Platformer2D.Circle",function(){return{att:1048840,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Vector2,$n[0].Single],pi:[{n:"position",pt:$n[1].Vector2,ps:0},{n:"radius",pt:$n[0].Single,ps:1}],sn:"$ctor1"},{a:2,n:"Intersects",t:8,pi:[{n:"rectangle",pt:$n[1].Rectangle,ps:0}],sn:"Intersects",rt:$n[0].Boolean,p:[$n[1].Rectangle],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Center",t:4,rt:$n[1].Vector2,sn:"Center"},{a:2,n:"Radius",t:4,rt:$n[0].Single,sn:"Radius",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("Platformer2D.FaceDirection",function(){return{att:256,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Left",is:!0,t:4,rt:$n[3].FaceDirection,sn:"Left",box:function($v){return Bridge.box($v,Platformer2D.FaceDirection,System.Enum.toStringFn(Platformer2D.FaceDirection))}},{a:2,n:"Right",is:!0,t:4,rt:$n[3].FaceDirection,sn:"Right",box:function($v){return Bridge.box($v,Platformer2D.FaceDirection,System.Enum.toStringFn(Platformer2D.FaceDirection))}}]}},$n);$m("Platformer2D.Enemy",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[3].Level,$n[1].Vector2,$n[0].Int32],pi:[{n:"level",pt:$n[3].Level,ps:0},{n:"position",pt:$n[1].Vector2,ps:1},{n:"spriteSet",pt:$n[0].Int32,ps:2}],sn:"ctor"},{a:2,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0},{n:"spriteBatch",pt:$n[2].SpriteBatch,ps:1}],sn:"Draw",rt:$n[0].Void,p:[$n[1].GameTime,$n[2].SpriteBatch]},{a:2,n:"LoadContent",t:8,pi:[{n:"spriteSet",pt:$n[0].Int32,ps:0}],sn:"LoadContent",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[1].GameTime]},{a:2,n:"BoundingRectangle",t:16,rt:$n[1].Rectangle,g:{a:2,n:"get_BoundingRectangle",t:8,rt:$n[1].Rectangle,fg:"BoundingRectangle"},fn:"BoundingRectangle"},{a:2,n:"Level",t:16,rt:$n[3].Level,g:{a:2,n:"get_Level",t:8,rt:$n[3].Level,fg:"Level"},fn:"Level"},{a:2,n:"Position",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Position",t:8,rt:$n[1].Vector2,fg:"Position"},fn:"Position"},{a:1,n:"MaxWaitTime",is:!0,t:4,rt:$n[0].Single,sn:"MaxWaitTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"MoveSpeed",is:!0,t:4,rt:$n[0].Single,sn:"MoveSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"direction",t:4,rt:$n[3].FaceDirection,sn:"direction",box:function($v){return Bridge.box($v,Platformer2D.FaceDirection,System.Enum.toStringFn(Platformer2D.FaceDirection))}},{a:1,n:"idleAnimation",t:4,rt:$n[3].Animation,sn:"idleAnimation"},{a:1,n:"level",t:4,rt:$n[3].Level,sn:"level"},{a:1,n:"localBounds",t:4,rt:$n[1].Rectangle,sn:"localBounds"},{a:1,n:"position",t:4,rt:$n[1].Vector2,sn:"position"},{a:1,n:"runAnimation",t:4,rt:$n[3].Animation,sn:"runAnimation"},{a:1,n:"sprite",t:4,rt:$n[3].AnimationPlayer,sn:"sprite"},{a:1,n:"waitTime",t:4,rt:$n[0].Single,sn:"waitTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("Platformer2D.Gem",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[3].Level,$n[1].Vector2],pi:[{n:"level",pt:$n[3].Level,ps:0},{n:"position",pt:$n[1].Vector2,ps:1}],sn:"ctor"},{a:2,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0},{n:"spriteBatch",pt:$n[2].SpriteBatch,ps:1}],sn:"Draw",rt:$n[0].Void,p:[$n[1].GameTime,$n[2].SpriteBatch]},{a:2,n:"LoadContent",t:8,sn:"LoadContent",rt:$n[0].Void},{a:2,n:"OnCollected",t:8,pi:[{n:"collectedBy",pt:$n[3].Player,ps:0}],sn:"OnCollected",rt:$n[0].Void,p:[$n[3].Player]},{a:2,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[1].GameTime]},{a:2,n:"BoundingCircle",t:16,rt:$n[3].Circle,g:{a:2,n:"get_BoundingCircle",t:8,rt:$n[3].Circle,fg:"BoundingCircle"},fn:"BoundingCircle"},{a:2,n:"Level",t:16,rt:$n[3].Level,g:{a:2,n:"get_Level",t:8,rt:$n[3].Level,fg:"Level"},fn:"Level"},{a:2,n:"Position",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Position",t:8,rt:$n[1].Vector2,fg:"Position"},fn:"Position"},{a:2,n:"Color",t:4,rt:$n[1].Color,sn:"Color",ro:!0},{a:2,n:"PointValue",is:!0,t:4,rt:$n[0].Int32,sn:"PointValue",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"basePosition",t:4,rt:$n[1].Vector2,sn:"basePosition"},{a:1,n:"bounce",t:4,rt:$n[0].Single,sn:"bounce",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"level",t:4,rt:$n[3].Level,sn:"level"},{a:1,n:"origin",t:4,rt:$n[1].Vector2,sn:"origin"}]}},$n);$m("Platformer2D.Level",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[0].Int32],pi:[{n:"levelIndex",pt:$n[0].Int32,ps:0}],sn:"ctor"},{a:2,n:"Dispose",t:8,sn:"Dispose",rt:$n[0].Void},{a:2,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0},{n:"spriteBatch",pt:$n[2].SpriteBatch,ps:1}],sn:"Draw",rt:$n[0].Void,p:[$n[1].GameTime,$n[2].SpriteBatch]},{a:1,n:"DrawTiles",t:8,pi:[{n:"spriteBatch",pt:$n[2].SpriteBatch,ps:0}],sn:"DrawTiles",rt:$n[0].Void,p:[$n[2].SpriteBatch]},{a:2,n:"GetBounds",t:8,pi:[{n:"x",pt:$n[0].Int32,ps:0},{n:"y",pt:$n[0].Int32,ps:1}],sn:"GetBounds",rt:$n[1].Rectangle,p:[$n[0].Int32,$n[0].Int32]},{a:2,n:"GetCollision",t:8,pi:[{n:"x",pt:$n[0].Int32,ps:0},{n:"y",pt:$n[0].Int32,ps:1}],sn:"GetCollision",rt:$n[3].TileCollision,p:[$n[0].Int32,$n[0].Int32],box:function($v){return Bridge.box($v,Platformer2D.TileCollision,System.Enum.toStringFn(Platformer2D.TileCollision))}},{a:1,n:"LoadEnemyTile",t:8,pi:[{n:"x",pt:$n[0].Int32,ps:0},{n:"y",pt:$n[0].Int32,ps:1},{n:"spriteSet",pt:$n[0].Int32,ps:2}],sn:"LoadEnemyTile",rt:$n[3].Tile,p:[$n[0].Int32,$n[0].Int32,$n[0].Int32]},{a:1,n:"LoadExitTile",t:8,pi:[{n:"x",pt:$n[0].Int32,ps:0},{n:"y",pt:$n[0].Int32,ps:1}],sn:"LoadExitTile",rt:$n[3].Tile,p:[$n[0].Int32,$n[0].Int32]},{a:1,n:"LoadGemTile",t:8,pi:[{n:"x",pt:$n[0].Int32,ps:0},{n:"y",pt:$n[0].Int32,ps:1}],sn:"LoadGemTile",rt:$n[3].Tile,p:[$n[0].Int32,$n[0].Int32]},{a:1,n:"LoadStartTile",t:8,pi:[{n:"x",pt:$n[0].Int32,ps:0},{n:"y",pt:$n[0].Int32,ps:1}],sn:"LoadStartTile",rt:$n[3].Tile,p:[$n[0].Int32,$n[0].Int32]},{a:1,n:"LoadTile",t:8,pi:[{n:"name",pt:$n[0].String,ps:0},{n:"collision",pt:$n[3].TileCollision,ps:1}],sn:"LoadTile$1",rt:$n[3].Tile,p:[$n[0].String,$n[3].TileCollision]},{a:1,n:"LoadTile",t:8,pi:[{n:"tileType",pt:$n[0].Char,ps:0},{n:"x",pt:$n[0].Int32,ps:1},{n:"y",pt:$n[0].Int32,ps:2}],sn:"LoadTile",rt:$n[3].Tile,p:[$n[0].Char,$n[0].Int32,$n[0].Int32]},{a:1,n:"LoadTiles",t:8,pi:[{n:"levelIndex",pt:$n[0].Int32,ps:0}],sn:"LoadTiles",rt:$n[0].Void,p:[$n[0].Int32]},{a:1,n:"LoadVarietyTile",t:8,pi:[{n:"baseName",pt:$n[0].String,ps:0},{n:"variationCount",pt:$n[0].Int32,ps:1},{n:"collision",pt:$n[3].TileCollision,ps:2}],sn:"LoadVarietyTile",rt:$n[3].Tile,p:[$n[0].String,$n[0].Int32,$n[3].TileCollision]},{a:1,n:"OnExitReached",t:8,sn:"OnExitReached",rt:$n[0].Void},{a:1,n:"OnGemCollected",t:8,pi:[{n:"gem",pt:$n[3].Gem,ps:0},{n:"collectedBy",pt:$n[3].Player,ps:1}],sn:"OnGemCollected",rt:$n[0].Void,p:[$n[3].Gem,$n[3].Player]},{a:1,n:"OnPlayerKilled",t:8,pi:[{n:"killedBy",pt:$n[3].Enemy,ps:0}],sn:"OnPlayerKilled",rt:$n[0].Void,p:[$n[3].Enemy]},{a:2,n:"StartNewLife",t:8,sn:"StartNewLife",rt:$n[0].Void},{a:2,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0},{n:"keyboardState",pt:$n[4].KeyboardState,ps:1},{n:"gamePadState",pt:$n[4].GamePadState,ps:2},{n:"accelState",pt:$n[3].AccelerometerState,ps:3},{n:"orientation",pt:$n[1].DisplayOrientation,ps:4}],sn:"Update",rt:$n[0].Void,p:[$n[1].GameTime,$n[4].KeyboardState,$n[4].GamePadState,$n[3].AccelerometerState,$n[1].DisplayOrientation]},{a:1,n:"UpdateEnemies",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"UpdateEnemies",rt:$n[0].Void,p:[$n[1].GameTime]},{a:1,n:"UpdateGems",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"UpdateGems",rt:$n[0].Void,p:[$n[1].GameTime]},{a:2,n:"Height",t:16,rt:$n[0].Int32,g:{a:2,n:"get_Height",t:8,rt:$n[0].Int32,fg:"Height",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Height"},{a:2,n:"Player",t:16,rt:$n[3].Player,g:{a:2,n:"get_Player",t:8,rt:$n[3].Player,fg:"Player"},fn:"Player"},{a:2,n:"ReachedExit",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_ReachedExit",t:8,rt:$n[0].Boolean,fg:"ReachedExit",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"ReachedExit"},{a:2,n:"Score",t:16,rt:$n[0].Int32,g:{a:2,n:"get_Score",t:8,rt:$n[0].Int32,fg:"Score",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Score"},{a:2,n:"TimeRemaining",t:16,rt:$n[0].TimeSpan,g:{a:2,n:"get_TimeRemaining",t:8,rt:$n[0].TimeSpan,fg:"TimeRemaining"},fn:"TimeRemaining"},{a:2,n:"Width",t:16,rt:$n[0].Int32,g:{a:2,n:"get_Width",t:8,rt:$n[0].Int32,fg:"Width",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Width"},{a:1,n:"EntityLayer",is:!0,t:4,rt:$n[0].Int32,sn:"EntityLayer",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"InvalidPosition",is:!0,t:4,rt:$n[1].Point,sn:"InvalidPosition",ro:!0},{a:1,n:"PointsPerSecond",is:!0,t:4,rt:$n[0].Int32,sn:"PointsPerSecond",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"enemies",t:4,rt:$n[6].List$1(Platformer2D.Enemy),sn:"enemies"},{a:1,n:"exit",t:4,rt:$n[1].Point,sn:"exit"},{a:1,n:"gems",t:4,rt:$n[6].List$1(Platformer2D.Gem),sn:"gems"},{a:1,n:"layers",t:4,rt:System.Array.type(Microsoft.Xna.Framework.Graphics.Texture2D),sn:"layers"},{a:1,n:"player",t:4,rt:$n[3].Player,sn:"player"},{a:1,n:"random",t:4,rt:$n[0].Random,sn:"random"},{a:1,n:"reachedExit",t:4,rt:$n[0].Boolean,sn:"reachedExit",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"score",t:4,rt:$n[0].Int32,sn:"score",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"start",t:4,rt:$n[1].Vector2,sn:"start"},{a:1,n:"tiles",t:4,rt:System.Array.type(Platformer2D.Tile,2),sn:"tiles"},{a:1,n:"timeRemaining",t:4,rt:$n[0].TimeSpan,sn:"timeRemaining"}]}},$n);$m("Platformer2D.Player",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[3].Level,$n[1].Vector2],pi:[{n:"level",pt:$n[3].Level,ps:0},{n:"position",pt:$n[1].Vector2,ps:1}],sn:"ctor"},{a:2,n:"ApplyPhysics",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"ApplyPhysics",rt:$n[0].Void,p:[$n[1].GameTime]},{a:1,n:"DoJump",t:8,pi:[{n:"velocityY",pt:$n[0].Single,ps:0},{n:"gameTime",pt:$n[1].GameTime,ps:1}],sn:"DoJump",rt:$n[0].Single,p:[$n[0].Single,$n[1].GameTime],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0},{n:"spriteBatch",pt:$n[2].SpriteBatch,ps:1}],sn:"Draw",rt:$n[0].Void,p:[$n[1].GameTime,$n[2].SpriteBatch]},{a:1,n:"GetInput",t:8,pi:[{n:"keyboardState",pt:$n[4].KeyboardState,ps:0},{n:"gamePadState",pt:$n[4].GamePadState,ps:1},{n:"accelState",pt:$n[3].AccelerometerState,ps:2},{n:"orientation",pt:$n[1].DisplayOrientation,ps:3}],sn:"GetInput",rt:$n[0].Void,p:[$n[4].KeyboardState,$n[4].GamePadState,$n[3].AccelerometerState,$n[1].DisplayOrientation]},{a:1,n:"HandleCollisions",t:8,sn:"HandleCollisions",rt:$n[0].Void},{a:2,n:"LoadContent",t:8,sn:"LoadContent",rt:$n[0].Void},{a:2,n:"OnKilled",t:8,pi:[{n:"killedBy",pt:$n[3].Enemy,ps:0}],sn:"OnKilled",rt:$n[0].Void,p:[$n[3].Enemy]},{a:2,n:"OnReachedExit",t:8,sn:"OnReachedExit",rt:$n[0].Void},{a:2,n:"Reset",t:8,pi:[{n:"position",pt:$n[1].Vector2,ps:0}],sn:"Reset",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0},{n:"keyboardState",pt:$n[4].KeyboardState,ps:1},{n:"gamePadState",pt:$n[4].GamePadState,ps:2},{n:"accelState",pt:$n[3].AccelerometerState,ps:3},{n:"orientation",pt:$n[1].DisplayOrientation,ps:4}],sn:"Update",rt:$n[0].Void,p:[$n[1].GameTime,$n[4].KeyboardState,$n[4].GamePadState,$n[3].AccelerometerState,$n[1].DisplayOrientation]},{a:2,n:"BoundingRectangle",t:16,rt:$n[1].Rectangle,g:{a:2,n:"get_BoundingRectangle",t:8,rt:$n[1].Rectangle,fg:"BoundingRectangle"},fn:"BoundingRectangle"},{a:2,n:"IsAlive",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsAlive",t:8,rt:$n[0].Boolean,fg:"IsAlive",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsAlive"},{a:2,n:"IsOnGround",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsOnGround",t:8,rt:$n[0].Boolean,fg:"IsOnGround",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsOnGround"},{a:2,n:"Level",t:16,rt:$n[3].Level,g:{a:2,n:"get_Level",t:8,rt:$n[3].Level,fg:"Level"},fn:"Level"},{a:2,n:"Position",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Position",t:8,rt:$n[1].Vector2,fg:"Position"},s:{a:2,n:"set_Position",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Position"},fn:"Position"},{a:2,n:"Velocity",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Velocity",t:8,rt:$n[1].Vector2,fg:"Velocity"},s:{a:2,n:"set_Velocity",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Velocity"},fn:"Velocity"},{a:1,n:"AccelerometerScale",is:!0,t:4,rt:$n[0].Single,sn:"AccelerometerScale",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"AirDragFactor",is:!0,t:4,rt:$n[0].Single,sn:"AirDragFactor",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"GravityAcceleration",is:!0,t:4,rt:$n[0].Single,sn:"GravityAcceleration",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"GroundDragFactor",is:!0,t:4,rt:$n[0].Single,sn:"GroundDragFactor",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"JumpButton",is:!0,t:4,rt:$n[4].Buttons,sn:"JumpButton",box:function($v){return Bridge.box($v,Microsoft.Xna.Framework.Input.Buttons,System.Enum.toStringFn(Microsoft.Xna.Framework.Input.Buttons))}},{a:1,n:"JumpControlPower",is:!0,t:4,rt:$n[0].Single,sn:"JumpControlPower",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"JumpLaunchVelocity",is:!0,t:4,rt:$n[0].Single,sn:"JumpLaunchVelocity",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"MaxFallSpeed",is:!0,t:4,rt:$n[0].Single,sn:"MaxFallSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"MaxJumpTime",is:!0,t:4,rt:$n[0].Single,sn:"MaxJumpTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"MaxMoveSpeed",is:!0,t:4,rt:$n[0].Single,sn:"MaxMoveSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"MoveAcceleration",is:!0,t:4,rt:$n[0].Single,sn:"MoveAcceleration",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"MoveStickScale",is:!0,t:4,rt:$n[0].Single,sn:"MoveStickScale",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"celebrateAnimation",t:4,rt:$n[3].Animation,sn:"celebrateAnimation"},{a:1,n:"dieAnimation",t:4,rt:$n[3].Animation,sn:"dieAnimation"},{a:1,n:"flip",t:4,rt:$n[2].SpriteEffects,sn:"flip",box:function($v){return Bridge.box($v,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Enum.toStringFn(Microsoft.Xna.Framework.Graphics.SpriteEffects))}},{a:1,n:"idleAnimation",t:4,rt:$n[3].Animation,sn:"idleAnimation"},{a:1,n:"isAlive",t:4,rt:$n[0].Boolean,sn:"isAlive",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"isJumping",t:4,rt:$n[0].Boolean,sn:"isJumping",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"isOnGround",t:4,rt:$n[0].Boolean,sn:"isOnGround",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"jumpAnimation",t:4,rt:$n[3].Animation,sn:"jumpAnimation"},{a:1,n:"jumpTime",t:4,rt:$n[0].Single,sn:"jumpTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"level",t:4,rt:$n[3].Level,sn:"level"},{a:1,n:"localBounds",t:4,rt:$n[1].Rectangle,sn:"localBounds"},{a:1,n:"movement",t:4,rt:$n[0].Single,sn:"movement",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"position",t:4,rt:$n[1].Vector2,sn:"position"},{a:1,n:"previousBottom",t:4,rt:$n[0].Single,sn:"previousBottom",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"runAnimation",t:4,rt:$n[3].Animation,sn:"runAnimation"},{a:1,n:"sprite",t:4,rt:$n[3].AnimationPlayer,sn:"sprite"},{a:1,n:"velocity",t:4,rt:$n[1].Vector2,sn:"velocity"},{a:1,n:"wasJumping",t:4,rt:$n[0].Boolean,sn:"wasJumping",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Platformer2D.RectangleExtensions",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"GetBottomCenter",is:!0,t:8,pi:[{n:"rect",pt:$n[1].Rectangle,ps:0}],sn:"GetBottomCenter",rt:$n[1].Vector2,p:[$n[1].Rectangle]},{a:2,n:"GetIntersectionDepth",is:!0,t:8,pi:[{n:"rectA",pt:$n[1].Rectangle,ps:0},{n:"rectB",pt:$n[1].Rectangle,ps:1}],sn:"GetIntersectionDepth",rt:$n[1].Vector2,p:[$n[1].Rectangle,$n[1].Rectangle]}]}},$n);$m("Platformer2D.TileCollision",function(){return{att:256,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Impassable",is:!0,t:4,rt:$n[3].TileCollision,sn:"Impassable",box:function($v){return Bridge.box($v,Platformer2D.TileCollision,System.Enum.toStringFn(Platformer2D.TileCollision))}},{a:2,n:"Passable",is:!0,t:4,rt:$n[3].TileCollision,sn:"Passable",box:function($v){return Bridge.box($v,Platformer2D.TileCollision,System.Enum.toStringFn(Platformer2D.TileCollision))}},{a:2,n:"Platform",is:!0,t:4,rt:$n[3].TileCollision,sn:"Platform",box:function($v){return Bridge.box($v,Platformer2D.TileCollision,System.Enum.toStringFn(Platformer2D.TileCollision))}}]}},$n);$m("Platformer2D.Tile",function(){return{att:1048840,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[2].Texture2D,$n[3].TileCollision],pi:[{n:"texture",pt:$n[2].Texture2D,ps:0},{n:"collision",pt:$n[3].TileCollision,ps:1}],sn:"$ctor1"},{a:2,n:"Collision",t:4,rt:$n[3].TileCollision,sn:"Collision",box:function($v){return Bridge.box($v,Platformer2D.TileCollision,System.Enum.toStringFn(Platformer2D.TileCollision))}},{a:2,n:"Height",is:!0,t:4,rt:$n[0].Int32,sn:"Height",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Size",is:!0,t:4,rt:$n[1].Vector2,sn:"Size",ro:!0},{a:2,n:"Texture",t:4,rt:$n[2].Texture2D,sn:"Texture"},{a:2,n:"Width",is:!0,t:4,rt:$n[0].Int32,sn:"Width",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Platformer2D.TouchCollectionExtensions",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"AnyTouch",is:!0,t:8,pi:[{n:"touchState",pt:$n[5].TouchCollection,ps:0}],sn:"AnyTouch",rt:$n[0].Boolean,p:[$n[5].TouchCollection],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Platformer2D.VirtualGamePad",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[1].Vector2,$n[1].Matrix,$n[2].Texture2D],pi:[{n:"baseScreenSize",pt:$n[1].Vector2,ps:0},{n:"globalTransformation",pt:$n[1].Matrix,ps:1},{n:"texture",pt:$n[2].Texture2D,ps:2}],sn:"ctor"},{a:2,n:"Draw",t:8,pi:[{n:"spriteBatch",pt:$n[2].SpriteBatch,ps:0}],sn:"Draw",rt:$n[0].Void,p:[$n[2].SpriteBatch]},{a:2,n:"GetState",t:8,pi:[{n:"touchState",pt:$n[5].TouchCollection,ps:0},{n:"gpState",pt:$n[4].GamePadState,ps:1}],sn:"GetState",rt:$n[4].GamePadState,p:[$n[5].TouchCollection,$n[4].GamePadState]},{a:2,n:"NotifyPlayerIsMoving",t:8,sn:"NotifyPlayerIsMoving",rt:$n[0].Void},{a:2,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[1].GameTime]},{a:1,n:"baseScreenSize",t:4,rt:$n[1].Vector2,sn:"baseScreenSize",ro:!0},{a:1,n:"globalTransformation",t:4,rt:$n[1].Matrix,sn:"globalTransformation"},{a:1,n:"opacity",t:4,rt:$n[0].Single,sn:"opacity",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"secondsSinceLastInput",t:4,rt:$n[0].Single,sn:"secondsSinceLastInput",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"texture",t:4,rt:$n[2].Texture2D,sn:"texture",ro:!0}]}},$n);$m("Platformer2D.GameContent",function(){return{nested:[$n[3].GameContent.Texture,$n[3].GameContent.Songs,$n[3].GameContent.SoundEffects,$n[3].GameContent.Font],att:1048960,a:4,s:!0,m:[{a:2,n:"Init",is:!0,t:8,pi:[{n:"content",pt:$n[7].ContentManager,ps:0},{n:"graphics",pt:$n[2].GraphicsDevice,ps:1}],sn:"Init",rt:$n[8].Task,p:[$n[7].ContentManager,$n[2].GraphicsDevice]},{a:2,n:"IsBaseLoaded",is:!0,t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsBaseLoaded",t:8,rt:$n[0].Boolean,fg:"IsBaseLoaded",is:!0,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IsBaseLoaded",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsBaseLoaded",is:!0},fn:"IsBaseLoaded"},{a:2,n:"IsLoaded",is:!0,t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsLoaded",t:8,rt:$n[0].Boolean,fg:"IsLoaded",is:!0,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IsLoaded",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsLoaded",is:!0},fn:"IsLoaded"},{a:2,n:"Counter",is:!0,t:4,rt:$n[0].Int32,sn:"Counter",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Levels",is:!0,t:4,rt:$n[6].List$1(System.Array.type(System.String)),sn:"Levels"}]}},$n);$m("Platformer2D.GameContent.Texture",function(){return{td:$n[3].GameContent,att:1048962,a:2,s:!0,m:[{a:2,n:"BackgroundLayer",is:!0,t:4,rt:System.Array.type(Microsoft.Xna.Framework.Graphics.Texture2D,2),sn:"BackgroundLayer"},{a:2,n:"Celebrate",is:!0,t:4,rt:$n[2].Texture2D,sn:"Celebrate"},{a:2,n:"Die",is:!0,t:4,rt:$n[2].Texture2D,sn:"Die"},{a:2,n:"Gem",is:!0,t:4,rt:$n[2].Texture2D,sn:"Gem"},{a:2,n:"Idle",is:!0,t:4,rt:$n[2].Texture2D,sn:"Idle"},{a:2,n:"Jump",is:!0,t:4,rt:$n[2].Texture2D,sn:"Jump"},{a:2,n:"MonsterIdle",is:!0,t:4,rt:System.Array.type(Microsoft.Xna.Framework.Graphics.Texture2D),sn:"MonsterIdle"},{a:2,n:"MonsterRun",is:!0,t:4,rt:System.Array.type(Microsoft.Xna.Framework.Graphics.Texture2D),sn:"MonsterRun"},{a:2,n:"Pixel",is:!0,t:4,rt:$n[2].Texture2D,sn:"Pixel"},{a:2,n:"Run",is:!0,t:4,rt:$n[2].Texture2D,sn:"Run"},{a:2,n:"Tiles",is:!0,t:4,rt:$n[6].Dictionary$2(System.String,Microsoft.Xna.Framework.Graphics.Texture2D),sn:"Tiles"},{a:2,n:"VirtualControlArrow",is:!0,t:4,rt:$n[2].Texture2D,sn:"VirtualControlArrow"},{a:2,n:"diedOverlay",is:!0,t:4,rt:$n[2].Texture2D,sn:"diedOverlay"},{a:2,n:"loseOverlay",is:!0,t:4,rt:$n[2].Texture2D,sn:"loseOverlay"},{a:2,n:"winOverlay",is:!0,t:4,rt:$n[2].Texture2D,sn:"winOverlay"}]}},$n);$m("Platformer2D.GameContent.Songs",function(){return{td:$n[3].GameContent,att:1048962,a:2,s:!0,m:[{a:2,n:"Music",is:!0,t:4,rt:$n[9].Song,sn:"Music"}]}},$n);$m("Platformer2D.GameContent.SoundEffects",function(){return{td:$n[3].GameContent,att:1048962,a:2,s:!0,m:[{a:2,n:"collectedSound",is:!0,t:4,rt:$n[10].SoundEffect,sn:"collectedSound"},{a:2,n:"exitReachedSound",is:!0,t:4,rt:$n[10].SoundEffect,sn:"exitReachedSound"},{a:2,n:"fallSound",is:!0,t:4,rt:$n[10].SoundEffect,sn:"fallSound"},{a:2,n:"jumpSound",is:!0,t:4,rt:$n[10].SoundEffect,sn:"jumpSound"},{a:2,n:"killedSound",is:!0,t:4,rt:$n[10].SoundEffect,sn:"killedSound"}]}},$n);$m("Platformer2D.GameContent.Font",function(){return{td:$n[3].GameContent,att:1048962,a:2,s:!0,m:[{a:2,n:"hudFont",is:!0,t:4,rt:$n[2].SpriteFont,sn:"hudFont"}]}},$n)});